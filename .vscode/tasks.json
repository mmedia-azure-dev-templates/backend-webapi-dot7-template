{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "build",
            "command": "dotnet",
            "type": "process",
            "args": [
                "build",
                "${workspaceFolder}/src/Boilerplate.Api/Boilerplate.Api.csproj",
                "/property:GenerateFullPaths=true",
                "/consoleloggerparameters:NoSummary"
            ],
            "problemMatcher": "$msCompile"
        },
        {
            "label": "publish",
            "command": "dotnet",
            "type": "process",
            "args": [
                "publish",
                "${workspaceFolder}/src/Boilerplate.Api/Boilerplate.Api.csproj",
                "/property:GenerateFullPaths=true",
                "/consoleloggerparameters:NoSummary"
            ],
            "problemMatcher": "$msCompile"
        },
        {
            "label": "watch",
            "command": "dotnet",
            "type": "process",
            "args": [
                "watch",
                "run",
                "--project",
                "${workspaceFolder}/src/Boilerplate.Api/Boilerplate.Api.csproj"
            ],
            "problemMatcher": "$msCompile"
        },
        {
            "type": "docker-build",
            "label": "docker-build: debug",
            "dependsOn": [
                "build"
            ],
            "dockerBuild": {
                "tag": "backend:dev",
                "target": "base",
                "dockerfile": "${workspaceFolder}/src/Boilerplate.Api/Dockerfile",
                "context": "${workspaceFolder}",
                "pull": true
            },
            "netCore": {
                "appProject": "${workspaceFolder}/src/Boilerplate.Api/Boilerplate.Api.csproj"
            }
        },
        {
            "type": "docker-build",
            "label": "docker-build: release",
            "dependsOn": [
                "build"
            ],
            "dockerBuild": {
                "tag": "backend:latest",
                "dockerfile": "${workspaceFolder}/src/Boilerplate.Api/Dockerfile",
                "context": "${workspaceFolder}",
                "pull": true
            },
            "netCore": {
                "appProject": "${workspaceFolder}/src/Boilerplate.Api/Boilerplate.Api.csproj"
            }
        },
        {
            "type": "docker-run",
            "label": "docker-run: debug",
            "dependsOn": [
                "docker-build: debug"
            ],
            "dockerRun": {
                "env": {
                    "ASPNETCORE_ENVIRONMENT": "Development",
                    "ASPNETCORE_URLS": "http://+:5000",
                    //"Kestrel:Certificates:Default:Path": "/src/Certs/ssl.cert",
                    //"Kestrel:Certificates:Default:KeyPath": "/src/Certs/ssl.key",
                    "JwtData:SigningKey": "jesuseselcamino",
                    "JwtData:Issuer": "https://localhost:44304",
                    "JwtData:Audience": "https://localhost:44304",
                    "JIBAN:Initial": "forever young",
                    "ConnectionStrings:SqlServerConnection": "Server=172.16.20.67,1433;Database=Jiban;User Id=sa;Password=Yourpassword123;TrustServerCertificate=True",
                    "ConnectionStrings:PostgresConnection": "Host=172.16.20.4;Database=madsisqa;Username=raul.flores;Password=Per aspera$;",
                    "AllowedHosts": "*",
                    "httpPort": "44369",
                    "useSSL": "true",
                    "sslPort": "443"
                }
            },
            "netCore": {
                "appProject": "${workspaceFolder}/src/Boilerplate.Api/Boilerplate.Api.csproj",
                "enableDebugging": true
            }
        },
        {
            "type": "docker-run",
            "label": "docker-run: release",
            "dependsOn": [
                "docker-build: release"
            ],
            "dockerRun": {},
            "netCore": {
                "appProject": "${workspaceFolder}/src/Boilerplate.Api/Boilerplate.Api.csproj"
            }
        }
    ]
}