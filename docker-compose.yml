# docker-compose up -d
# docker-compose down

version: "3.6"
networks:
  localdev:
    name: localdev

services:
  db-server:
    image: ${SQLSERVER_IMAGE}
    container_name: mssql
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${SQLSERVER_PASSWORD}
    ports:
      - 1433:1433
    networks: 
        localdev:
            aliases: 
                - mssql
    volumes:
      - sqlvolume:/var/opt/mssql      
  boilerplate-api:
    #entrypoint: ["./wait-for.sh", "mssql:1433", "-t", "120", "--", "dotnet", "Boilerplate.Api.dll"]
    build:
      context: .
      dockerfile: src/Boilerplate.Api/Dockerfile
      args:
        SOURCE_SECRETS_PATH: ${SOURCE_SECRETS_PATH}
        DESTINATION_SECRETS_PATH: ${DESTINATION_SECRETS_PATH}
        APACHE: "www-data"
        USER: ${USER}
        CUSTOMUID: $CUSTOMUID
        CUSTOMGID: $CUSTOMGID
    image: boilerplate-api:local
    container_name: boilerplate-api
    depends_on:
      - db-server
    volumes:
      - ./etc/wait-for.sh:/app/wait-for.sh
    networks: 
        localdev:
            aliases: 
                - boilerplate-api
  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:latest
    ports:
      - "6831:6831/udp"
      - "16686:16686"
    networks:
      - localdev

volumes:
  sqlvolume: